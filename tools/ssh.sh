#!/bin/bash

ssh-iproute() {
  local traffic="$(ss -n sport 22 | tail -n+2 | grep -Po '\d+(\.\d+)+' | awk 'NR%2==0')"

  for ip in $traffic; do
    local ip_addr_after_via="$(ip route get "$ip" sport 22 | grep -Po '(?<=via )\d+(\.\d+)+((?! src).)+')"
    local new_ip_rule="$ip via $ip_addr_after_via"
    local old_ip_rule="$(ip route list | grep "$new_ip_rule")"

    if [ -z "$old_ip_rule" ]; then
      cat <<EOF
Adding missing rule: $new_ip_rule
EOF

      bash -c "sudo ip route add $new_ip_rule"
    else
      cat <<EOF
Skipping existing rule: $old_ip_rule
EOF
    fi
  done
}

ssh-public() {
  local temp_file="$(mktemp)"
  local header="### Generated by $(whoami) on $(hostname) at $(date +'%Y-%m-%d %H:%M:%S') ###"
  local divider="$(printf '#%.0s' $(seq 1 $(echo -n "$header" | wc -c)))"

  cat <<EOF >"$temp_file"
cat <<EOT>>~/.ssh/authorized_keys

$divider
$header
$divider
EOF

  find ~/.ssh/ -name '*.pub' | xargs cat | sort | uniq >>"$temp_file"
  cat <<EOF >>"$temp_file"
$divider

EOT
EOF

  code "$temp_file"
}

wg-up() {
  if ! command -v wg-quick &>/dev/null; then
    echo "WireGuard is not installed!"
    return 1
  fi

  sudo -p "This script will use sudo to run wg-quick
Enter sudo password for $(whoami): " sleep 0

  if ! sudo find /etc/wireguard -name "wg0.conf" -type f -maxdepth 1 &>/dev/null; then
    echo "Error: /etc/wireguard/wg0.conf not found!"
    return 1
  fi

  ssh-iproute

  if [[ $(sudo wg show wg0 2>/dev/null) ]]; then
    echo "WireGuard interface wg0 is already active."
  else
    sudo wg-quick up wg0
  fi
}

wg-down() {
  sudo -p "This script will use sudo to run wg-quick
Enter sudo password for $(whoami): " sleep 0

  if [[ $(sudo wg show wg0 2>/dev/null) ]]; then
    sudo wg-quick down wg0
  else
    echo "WireGuard interface wg0 is already inactive."
  fi
}

# insecure ssh
issh() {
  ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $@
}
